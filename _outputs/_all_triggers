Trigger {
	players = {P5},
	conditions = {
		CountdownTimer(Exactly,0);
	},
	actions = {
		SetCountdownTimer(SetTo,40);
		PreserveTrigger();
		Comment("Countdown Timer");
	}
}
Trigger {
	players = {Force1,Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		MoveLocation("City Processor","Terran Beacon",P9,"Anywhere");
		PreserveTrigger();
		Comment("Tax Trigger Move Location");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by CPU");
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Player");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Allied Computer");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		Bring(Force1,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Nobody");
	}
}
Trigger {
	players = {Force1,Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		MoveLocation("City Processor","Terran Beacon",P9,"Anywhere");
		PreserveTrigger();
		Comment("Tax Trigger Move Location");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by CPU");
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Player");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Allied Computer");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		Bring(Force1,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Nobody");
	}
}
Trigger {
	players = {Force1,Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		MoveLocation("City Processor","Terran Beacon",P9,"Anywhere");
		PreserveTrigger();
		Comment("Tax Trigger Move Location");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by CPU");
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Player");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Allied Computer");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		Bring(Force1,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Nobody");
	}
}
Trigger {
	players = {Force1,Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		MoveLocation("City Processor","Terran Beacon",P9,"Anywhere");
		PreserveTrigger();
		Comment("Tax Trigger Move Location");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by CPU");
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Player");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Allied Computer");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		Bring(Force1,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Nobody");
	}
}
Trigger {
	players = {Force1,Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		MoveLocation("City Processor","Terran Beacon",P9,"Anywhere");
		PreserveTrigger();
		Comment("Tax Trigger Move Location");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by CPU");
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Player");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Buildings","City Processor");
		Bring(P9,AtLeast,1,"Terran Beacon","City Processor");
		Bring(Force2,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",CurrentPlayer);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Allied Computer");
	}
}
Trigger {
	players = {Force3},
	conditions = {
		Bring(P9,AtLeast,1,"Terran Beacon","Anywhere");
		Bring(Force1,Exactly,0,"Buildings","City Processor");
		Bring(Force3,Exactly,0,"Buildings","City Processor");
		CountdownTimer(AtLeast,31);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",P9,"City Processor",P8);
		PreserveTrigger();
		Comment("Tax Trigger Owned by Nobody");
	}
}
Trigger {
	players = {Force1,Force2,Force3},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Terran Beacon","Anywhere");
		CountdownTimer(AtMost,30);
	},
	actions = {
		GiveUnits(1,"Terran Beacon",CurrentPlayer,"Anywhere",P9);
		SetDeaths(CurrentPlayer,Add,500,"Vespene Tank (Terran Type 1)");
		PreserveTrigger();
		Comment("Give Beacon to Neutral");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,65536,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,65536,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,65536,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,32768,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,32768,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,32768,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,16384,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,16384,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,16384,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,8192,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,8192,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,8192,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,4096,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,4096,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,4096,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,2048,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,2048,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,2048,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,1024,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,1024,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,1024,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,512,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,512,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,512,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,256,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,256,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,256,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,128,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,128,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,128,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,64,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,64,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,64,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,32,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,32,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,32,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,16,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,16,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,16,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,8,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,8,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,8,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,4,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,4,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,4,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,2,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,2,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,2,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force1,Force2},
	conditions = {
		Deaths(CurrentPlayer,AtLeast,1,"Vespene Tank (Terran Type 1)");
	},
	actions = {
		SetDeaths(CurrentPlayer,Subtract,1,"Vespene Tank (Terran Type 1)");
		SetResources(CurrentPlayer,Add,1,Ore);
		PreserveTrigger();
		Comment("Binary Tax Conversion");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Anshan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Anshan",Attack,"Sinuiju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Sinuiju");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Sinuiju",Attack,"Pyongyang");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Pyongyang");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Pyongyang",Attack,"Haeju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Haeju");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Haeju",Attack,"Seoul West");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Seoul West");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Seoul West",Attack,"Ahsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Ahsan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Ahsan",Attack,"Gwangju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gwangju");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gwangju",Attack,"Changwon");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Changwon");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Changwon",Attack,"Busan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Junggangjin");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Junggangjin",Attack,"Ganggye");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Ganggye");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Ganggye",Attack,"Gaecheon");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gaecheon");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gaecheon",Attack,"Gaesung");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gaesung");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gaesung",Attack,"Dongducheon");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Dongducheon");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Dongducheon",Attack,"Seoul East");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Seoul East");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Seoul East",Attack,"Jinahn");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Jinahn");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Jinahn",Attack,"Busan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Busan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Busan",Attack,"Between Busan Ulsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Jilin");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Jilin",Attack,"Gaema");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gaema");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gaema",Attack,"Hamhung");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Hamhung");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Hamhung",Attack,"Gaesung top");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gaesung top");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gaesung top",Attack,"Wonju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Wonju");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Wonju",Attack,"Daegu");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Daegu");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Daegu",Attack,"Between Busan Ulsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Cheongjin");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Cheongjin",Attack,"Haesan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Haesan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Haesan",Attack,"Sinpo");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Sinpo");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Sinpo",Attack,"Wonsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Wonsan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Wonsan",Attack,"Gangwon");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gangwon");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gangwon",Attack,"Gyeongju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Gyeongju");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Gyeongju",Attack,"Ulsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Ulsan");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Ulsan",Attack,"Between Busan Ulsan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Shenyang");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Shenyang",Attack,"Xihu");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Xihu");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Xihu",Attack,"Ganggye");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Chaoyang");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Chaoyang",Attack,"Anshan");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}
Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2,AtLeast,12,"Men","Dalian");
		Deaths(P5,Exactly,0,"Start Location");
	},
	actions = {
		Order("Men",Force2,"Dalian",Attack,"Sinuiju");
		PreserveTrigger();
		Comment("[Comment] Computer Lane Order Control");
	}
}


Trigger { -- Comment - Hyper Triggers
	players = {P5},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
		Comment("Comment - Hyper Triggers");
	},
}

Trigger { -- Comment - Hyper Triggers
	players = {P5},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
		Comment("Comment - Hyper Triggers");
	},
}

Trigger { -- Comment - Hyper Triggers
	players = {P5},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
		Comment("Comment - Hyper Triggers");
	},
}

Trigger { -- Comment - Hyper Triggers
	players = {P5},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
		Comment("Comment - Hyper Triggers");
	},
}

Trigger { -- Comment - Hyper Triggers
	players = {P5},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
		Comment("Comment - Hyper Triggers");
	},
}
